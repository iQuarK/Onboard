class User < ActiveRecord::Base

  include Stripe::Callbacks

  # For roles
  rolify

  # Include default devise modules. Others available are: :confirmable, :lockable, :timeoutable and :omniauthable
  devise :database_authenticatable, :registerable, :recoverable, :rememberable, :trackable, :validatable

  # -------------------------------------------------------------------------------------------------------------------
  # Attributes
  # -------------------------------------------------------------------------------------------------------------------



  # -------------------------------------------------------------------------------------------------------------------
  # Validations
  # -------------------------------------------------------------------------------------------------------------------



  # -------------------------------------------------------------------------------------------------------------------
  # Associations
  # -------------------------------------------------------------------------------------------------------------------
  has_many :company_administrators
  has_many :companies, through: :company_administrators
  has_many :applications
  has_many :notes


  # -------------------------------------------------------------------------------------------------------------------
  # Nested Attributes
  # -------------------------------------------------------------------------------------------------------------------



  # -------------------------------------------------------------------------------------------------------------------
  # Constants
  # -------------------------------------------------------------------------------------------------------------------



  # -------------------------------------------------------------------------------------------------------------------
  # Named Scopes
  # -------------------------------------------------------------------------------------------------------------------



  # -------------------------------------------------------------------------------------------------------------------
  # Callbacks
  # -------------------------------------------------------------------------------------------------------------------

  after_create :welcome_message

  # -------------------------------------------------------------------------------------------------------------------
  # Public Methods
  # -------------------------------------------------------------------------------------------------------------------

  def full_name
    [self.first_name,self.last_name].join(" ")
  end

  # -------------------------------------------------------------------------------------------------------------------
  # Stripe Callbacks
  # -------------------------------------------------------------------------------------------------------------------

  # after_customer_updated! do |customer, event|
  #   user = User.find_by_stripe_customer_id(customer.id)
  #   if customer.delinquent
  #     user.is_account_current = false
  #     user.save!
  #   end
  # end



  # -------------------------------------------------------------------------------------------------------------------
  # Private Methods
  # -------------------------------------------------------------------------------------------------------------------
  private

  def welcome_message
    UserMailer.welcome(self).deliver
  end

end
